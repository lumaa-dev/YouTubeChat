import groovy.json.JsonOutput
import groovy.json.JsonSlurper
import groovy.json.StringEscapeUtils

architectury {
    common(project.enabled_platforms.split(","))
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc", module: "fabric-loader"
    }

    implementation(group: "com.google.apis", name: "google-api-services-youtube", version: project.api_services_youtube)
    implementation(group: "com.google.oauth-client", name: "google-oauth-client-jetty", version: project.oauth_client_jetty)
    implementation(group: "com.google.api-client", name: "google-api-client", version: project.api_client)
    implementation(group: "com.google.http-client", name: "google-http-client", version: project.http_client)
}

processResources {
    doLast {
        minifyJson(outputs)
    }
}

license {
    header = rootProject.file("LICENSE-header.txt")
    include "**/*.java"
}

def minifyJson(TaskOutputs outputs) {
    fileTree(dir: outputs.files.asPath, include: ["**/*.json", "**/*.mcmeta"]).each {
        def file -> file.text = StringEscapeUtils.unescapeJavaScript(JsonOutput.toJson(new JsonSlurper().parse(file)))
    }
}